---
title: '男性の仕事満足度と男女間賃金格差との関連'
subtitile: '『情報可視化の理論と実践』にて2025年01月10日（金）発表'
author: 
  - name: 三田周之介
    affiliation: 東京大学大学院教育学研究科比較教育社会学コース修士課程
    email: evangelisten364@g.ecc.u-tokyo.ac.jp
    url: https://github.com/MITA-Shunosuke/infovis-notebooks.git
date: today　
date-format: "YYYY/MM/DD"
format: 
  html:
    grid: 
      body-width: 1024px
    theme: lumen
    highlight-style: a11y
    toc: true
    toc-location: right
    toc-depth: 3
    number-sections: true
#  pdf: 
#    pdf-engine: lualatex
#    documentclass: ltjsarticle
#    classoption:
#      - a4paper
#      - 10.5pt
#toc: true
#    toc-depth: 3
#    number-sections: true
bibliography: references.bib
bibliographystyle: american-sociological-association
---

# 問い

- <u>**男女間の賃金格差と男性の仕事満足度は関連しているか？**</u>
  - 関連していると考えられる理由
    - 自分のやりたい仕事よりも稼いでくることが優先される？
    - OR 次の仕事が見つからないリスクから転職ができない？
    - OR 家計における稼ぎ手としてのプレッシャー？
  - 補足
    - 今回はあくまで関連の検証であり、因果関係の検証ではない

# データの概要、取得と前処理の方法

```{python}
#| include: false
# パッケージの読み込み
import pandas as pd
import io
import requests
import altair as alt
from scipy.stats import pearsonr
```

## データの概要
- @ISSP2015
  - データの説明
    - 仕事、雇用、仕事の方向性に関する国際的な社会調査
  - 用いた変数
    - 調査対象国
    - 性別
    - 仕事満足度（あなたは、今の仕事にどのくらい満足していますか。）
    - 同居するパートナーの有無（あなたには現在、配偶者（またはパートナー）がいますか。また、いる方は、その相手と一緒に生活していますか。）
- @OECD2024
  - 用いた変数
    - OECD加盟国における男女の賃金格差
    - 集計年
    - 集計した国
    - 賃金分布において、賃金の中央値を計算する範囲
    - 賃金の中央値の男女差が男性の賃金の中央値に占める割合（%）

## データの取得方法
- @ISSP2015
  - 以下のURLから手動でローカル端末にCSVファイルをダウンロードした。ダウンロードした後自分のGitHubレポジトリにアップロードした。
    - <https://doi.org/10.4232/1.12848>
    ```{python}
    #| code-fold: true
    # ISSP(2015) のデータをダウンロードする。
    url = 'https://raw.githubusercontent.com/MITA-Shunosuke/infovis-notebooks/refs/heads/main/final_report/ISSP%202015%20-%20Work%20Orientations%20IV/issp2015_wo.csv'
    response = requests.get(url)
    df_wo = pd.read_csv(io.BytesIO(response.content))
    ```
- @OECD2024
  - 以下のリンクから io ライブラリおよび requests ライブラリを用いて CSVファイルをダウンロードした。
    - <https://sdmx.oecd.org/public/rest/data/OECD.ELS.SAE,DSD_EARNINGS@GENDER_WAGE_GAP,1.0/all?dimensionAtObservation=AllDimensions&format=csvfilewithlabels> 
    ```{python}
    #| code-fold: true
    # OECDによる性別による賃金の中央値の差の国別データをダウンロードする
    url = 'https://sdmx.oecd.org/public/rest/data/OECD.ELS.SAE,DSD_EARNINGS@GENDER_WAGE_GAP,1.0/all?dimensionAtObservation=AllDimensions&format=csvfilewithlabels'
    response = requests.get(url)
    df_gengap = pd.read_csv(io.BytesIO(response.content))
    ```

## データの前処理の方法
- @ISSP2015
  - OECD加盟国＋台湾の行のみ抽出する。
    ```{python}
    #| code-fold: true
    #すべての調査が終了した2017年6月時点でのOECD加盟国 + 台湾 のラベルを
    # 正式な国名に変換し、それ以外の国名を None に変換
    def Country_OECD_full(x):
        if x == "AT":
            return "Austria"
        elif x == "AU":
            return "Australia"
        elif x == "BE":
            return "Belgium"
        elif x == "CH":
            return "Switzerland"
        elif x == "CL":
            return "Chile"
        elif x == "CZ":
            return "Czech Republic"
        elif x == "DK":
            return "Denmark"
        elif x == "EE":
            return "Estonia"
        elif x == "ES":
            return "Spain"
        elif x == "FI":
            return "Finland"
        elif x == "FR":
            return "France"
        elif x == "HU":
            return "Hungary"
        elif x == "IS":
            return "Iceland"
        elif x == "JP":
            return "Japan"
        elif x == "LV":
            return "Latvia"
        elif x == "MX":
            return "Mexico"
        elif x == "NZ":
            return "New Zealand"
        elif x == "NO":
            return "Norway"
        elif x == "PL":
            return "Poland"
        elif x == "SE":
            return "Sweden"
        elif x == "SI":
            return "Slovenia"
        elif x == "SK":
            return "Slovakia"
        elif x == "TR":
            return "Turkey"
        elif x == "TW":
            return "Taiwan"
        elif x == "US":
            return "United States"
        elif x == "DE":
            return "Germany"
        elif x == "IL":
            return "Israel"
        elif x == "GB-GBN":
            return "Great Britain"
        else:
            return None
    df_wo['Country_OECD_full'] = df_wo['c_alphan'].apply(Country_OECD_full)
    ```
    ```{python}
    #| include: false
    def func_female_dummy(x):
      if x == 1: # Male
          return 'Male'
      elif x == 2: #Female
          return 'Female'
      else:
          return None
    df_wo['SEX_label'] = df_wo['SEX'].apply(func_female_dummy)
    ```
  - 仕事満足度の変数を、仕事満足度が高くなるほど値が大きくなるように逆転
    ```{python} 
    #| code-fold: true
    #v44 あなたは、今の仕事にどのくらい満足していますか。
    #項目の逆転
    df_wo['satisfy_in_job'] = df_wo['v44'].apply(lambda x : 8-x if x < 8 else None)
    ```
  - 国ごとの男性の国別平均仕事満足度が対応したデータセットを作成
    ```{python}  
    #| code-fold: true
    # ISSP2015のデータについて、男性における国別の平均仕事満足度のデータフレームを作成する
    df_wo_analysis = df_wo[(df_wo['SEX_label'] == 'Male')]\
      .groupby(['Country_OECD_full'])['satisfy_in_job']\
      .mean().reset_index()
    ```
- @OECD2024
  - 集計年が2014年の行を抽出
    - 2015年から直近2年で最も集計された国が多かったため
    ```{python}  
    #| code-fold: true
    # OECDのデータセットから、集計年が2014年かつ格差の計算範囲が全体の行を抽出
    df_gengap_analysis = df_gengap[(df_gengap['TIME_PERIOD'] == 2014)\
      &(df_gengap['AGGREGATION_OPERATION'] == 'MEDIAN')]\
        .loc[:, ['STRUCTURE_NAME','REF_AREA','Reference area','OBS_VALUE']]\
        .reset_index()
    ```
- 上記の二つのデータセットを国名を元に横に結合した分析用データセットを作成
  - 21ヶ国のデータが得られた
  ```{python}  
  #| code-fold: true
  # 二つのデータセットを横に結合した分析用データセットを作る
  df_concat = pd.merge(df_wo_analysis, df_gengap_analysis,\
                left_on="Country_OECD_full", right_on="Reference area")
  ```

```{python}  
#| include: false
# 特定の列を抽出し、列名を変更する
df_analysis = df_concat.loc[:, ['Country_OECD_full','satisfy_in_job','OBS_VALUE']]\
	.rename(columns={"Country_OECD_full":"Country","OBS_VALUE":"Gender wage gap"})
```

```{python}
#| include: false
# Zスコアによる標準化
df_analysis_std = df_analysis
df_analysis_std['satisfy_in_job'] = (df_analysis['satisfy_in_job'] - df_analysis['satisfy_in_job'].mean()) / df_analysis['satisfy_in_job'].std()
df_analysis_std['Gender wage gap'] = (df_analysis['Gender wage gap'] - df_analysis['Gender wage gap'].mean()) / df_analysis['Gender wage gap'].std()
```
# データ変数と視覚変数の対応関係

|データ変数                   |データ変数の性質 |視覚変数  |視覚変数の性質|
|:-------------------------:|---------------|-------:|-----------:|
|ある国の賃金の中央値の男女差    |比例尺度         |位置X   |定量性・順序性|
|男性における国別平均仕事満足度   |順序尺度        |位置Y    |定量性・順序性|
|二つのデータ間の回帰直線の傾き   |比例尺度        |角度・方向|定量性・順序性|

# 可視化作品

## 男女間の賃金格差×男性の国別平均仕事満足度

```{python}
#| code-fold: true
chart = alt.Chart(df_analysis).mark_point().encode(
    x='Gender wage gap',
    y='satisfy_in_job'
).properties(
    title=alt.TitleParams(text = 'そのままのデータ', 
						  fontSize = 14, 
						  dy = -5)
)
text = chart.mark_text(
    align='left',
    baseline='middle',
    dx=7
).encode(
    text='Country'
)
line = chart.transform_regression('Gender wage gap', 'satisfy_in_job').mark_line()

chart_std = alt.Chart(df_analysis_std).mark_point().encode(
    x='Gender wage gap',
    y='satisfy_in_job',
).properties(
    title=alt.TitleParams(text = '標準化したデータ', 
						  fontSize = 14, 
						  dy = -5)
)
text_std = chart_std.mark_text(
    align='left',
    baseline='middle',
    dx=7
).encode(
    text='Country'
)
line_std = chart_std.transform_regression('Gender wage gap', 'satisfy_in_job').mark_line()

alt.hconcat(chart + chart.interactive() + text + line,\
   chart_std + chart_std.interactive() + text_std + line_std
			)
```

## 男女間賃金格差×男性有配偶者の国別平均仕事満足度
```{python}
#| code-fold: true

# 男性かつ配偶者がいて、一緒に生活している人に絞ってみる
## ISSP2015のデータについて、男性有配偶者における国別の平均仕事満足度のDFを作成する
df_wo_analysis_m = df_wo[(df_wo['SEX_label'] == 'Male')&(df_wo['PARTLIV'] == 1)]\
	.groupby(['Country_OECD_full'])['satisfy_in_job']\
	.mean().reset_index()
## 二つのデータセットを横に結合した分析用データセットを作る
df_concat = pd.merge(df_wo_analysis_m, df_gengap_analysis,\
					    left_on="Country_OECD_full", right_on="Reference area")
## 特定の列を抽出し、列名を変更する
df_analysis_m = df_concat.loc[:, ['Country_OECD_full','satisfy_in_job','OBS_VALUE']]\
	.rename(columns={"Country_OECD_full":"Country","OBS_VALUE":"Gender wage gap"})
# Zスコアによる標準化
df_analysis_m_std = df_analysis_m
df_analysis_m_std['satisfy_in_job'] = (df_analysis_m['satisfy_in_job'] \
  - df_analysis_m['satisfy_in_job'].mean()) / df_analysis_m['satisfy_in_job'].std()
df_analysis_m_std['Gender wage gap'] = (df_analysis_m['Gender wage gap'] \
  - df_analysis_m['Gender wage gap'].mean()) / df_analysis_m['Gender wage gap'].std()

#グラフの描画
chart = alt.Chart(df_analysis_m).mark_point().encode(
    x='Gender wage gap',
    y='satisfy_in_job'
).properties(
    title=alt.TitleParams(text = 'そのままのデータ', 
						              fontSize = 14, 
						              dy = -5)
)
text = chart.mark_text(
    align='left',
    baseline='middle',
    dx=7
).encode(
    text='Country'
)
line = chart.transform_regression('Gender wage gap', 'satisfy_in_job').mark_line()

chart_std = alt.Chart(df_analysis_m_std).mark_point().encode(
    x='Gender wage gap',
    y='satisfy_in_job',
).properties(
    title=alt.TitleParams(text = '標準化したデータ', 
                          fontSize = 14, 
                          dy = -5)
)
text_std = chart_std.mark_text(
    align='left',
    baseline='middle',
    dx=7
).encode(
    text='Country'
)
line_std = chart_std.transform_regression('Gender wage gap', 'satisfy_in_job').mark_line()

alt.hconcat(chart + chart.interactive() + text + line,\
   chart_std + chart_std.interactive() + text_std + line_std
			)
```

## 男女間賃金格差×男性有配偶者の日本を除く国別平均仕事満足度
```{python}
#| code-fold: true

# 男性かつ配偶者がいて、一緒に生活している人のデータから日本をのぞいてみる
## 日本を分析対象から除いたデータセットを作る
df_analysis_m_nonj = df_analysis[(df_analysis['Country'] != 'Japan')]
df_analysis_m_std_nonj = df_analysis_std[(df_analysis_std['Country'] != 'Japan')]

#グラフの描画
chart = alt.Chart(df_analysis_m_nonj).mark_point().encode(
    x='Gender wage gap',
    y='satisfy_in_job'
).properties(
    title=alt.TitleParams(text = 'そのままのデータ', 
						  fontSize = 14, 
						  dy = -5)
)
text = chart.mark_text(
    align='left',
    baseline='middle',
    dx=7
).encode(
    text='Country'
)
line = chart.transform_regression('Gender wage gap', 'satisfy_in_job').mark_line()

chart_std = alt.Chart(df_analysis_m_std_nonj).mark_point().encode(
    x='Gender wage gap',
    y='satisfy_in_job',
).properties(
    title=alt.TitleParams(text = '標準化したデータ', 
						  fontSize = 14, 
						  dy = -5)
)
text_std = chart_std.mark_text(
    align='left',
    baseline='middle',
    dx=7
).encode(
    text='Country'
)
line_std = chart_std.transform_regression('Gender wage gap', 'satisfy_in_job').mark_line()

alt.hconcat(chart + chart.interactive() + text + line,\
   chart_std + chart_std.interactive() + text_std + line_std
			)
```

# 考察
- 結果：**男女間の賃金格差が大きくなるほど、男性の仕事満足度が低くなるというわけではなかった**
  - 性別役割分業は男性にとって精神的な意味で必ずしもデメリットではないのかもしれない
    - 考えられる精神的なメリット
      - 仕事にフルコミットできる
- 外れ値としての日本
  - 性別役割分業がデメリットになるような制度的特徴があるのかもしれない
  - 満足度を低く答えるような文化的特徴があるのかもしれない

# 参考文献